@startuml

class connectableTCP {
    - peer_addr: str
    - peer_bitfield: None
    - peer_choked: bool
    - interested: bool
    - choked: bool
    - peer_reader: object
    - peer_writer: object
    + __init__(peer_addr: str, peer_reader: object, peer_writer: object): void
}

class downloadHandlerTCP {
    - pending: bool
    - torrent: Torrent
    - settings: Settings
    - piece_handler: PieceHandler
    - block_offset: int
    - current_piece_data: bytearray
    - self_addr: tuple
    - peer_connections: List[connectableTCP]
    - server: None
    - current_peer: None
    - loops_until_answer: int
    - current_peer_index: int
    + __init__(torrent: Torrent, settings: Settings): void
  + make_handshake(peer_addr): coroutine
  + handle_client(reader, writer): coroutine
  + main_loop(): coroutine
  + request_block(piece_index, block_offset): coroutine
  + handle_msg(peer: connectableTCP): coroutine
  + gather_connectables(): coroutine
  + on_block(msg_len, payload): None
  + get_next_peer(): None
  + write_data_to_block(piece_index, block_offset, block_length, block): None
}
connectableTCP -> downloadHandlerTCP : peer_connections

@enduml